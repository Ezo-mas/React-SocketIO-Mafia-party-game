{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kipra\\\\Desktop\\\\KTU\\\\React-SocketIO-Mafia-party-game\\\\client\\\\src\\\\components\\\\GamePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport socket from '../services/socket';\nimport styles from './GamePage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const {\n    username,\n    gameSettings\n  } = location.state || {\n    username: 'Guest',\n    gameSettings: {}\n  };\n  const [gameState, setGameState] = useState({\n    phase: 'night',\n    // 'day' or 'night'\n    phaseTime: 0,\n    // time remaining in current phase\n    players: [],\n    // Array of players with their roles\n    role: 'waiting',\n    // Player's assigned role\n    isAlive: true\n  });\n  const [countdown, setCountdown] = useState(0); // Countdown timer state\n  const [showRoles, setShowRoles] = useState(false); // State to show role cards\n  const [isFadingOut, setIsFadingOut] = useState(false); // State to trigger fade-out animation\n  const [showGameScreen, setShowGameScreen] = useState(false); // State to show the main game screen\n\n  useEffect(() => {\n    // Join game room\n    socket.emit('join_game', roomId, username);\n\n    // Listen for server events\n    const handleCountdown = countdownDuration => {\n      setCountdown(countdownDuration);\n      const timer = setInterval(() => {\n        setCountdown(prev => {\n          if (prev === 1) {\n            clearInterval(timer);\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    };\n    const handleRoleAssigned = playersWithRoles => {\n      setGameState(prev => ({\n        ...prev,\n        players: playersWithRoles\n      }));\n      setShowRoles(true);\n\n      // Hide the role cards after 7 seconds and show the game screen\n      setTimeout(() => {\n        setIsFadingOut(true); // Start fade-out animation\n        setTimeout(() => {\n          setShowRoles(false); // Hide role cards\n          setIsFadingOut(false); // Reset fade-out state\n          setShowGameScreen(true); // Show the main game screen\n        }, 1000); // Match the duration of the fade-out animation\n      }, 2000);\n    };\n    const handleGameStarted = newGameState => {\n      setGameState(newGameState);\n    };\n    socket.on('start_countdown', handleCountdown);\n    socket.on('assign_roles', handleRoleAssigned);\n    socket.on('game_started', handleGameStarted);\n    return () => {\n      socket.off('start_countdown', handleCountdown);\n      socket.off('assign_roles', handleRoleAssigned);\n      socket.off('game_started', handleGameStarted);\n    };\n  }, [roomId, username]);\n  if (countdown > 0) {\n    // Render the countdown timer\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game Starting In...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: countdown <= 3 ? styles.redCountdown : '',\n        children: [countdown, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n  if (showRoles) {\n    // Render role cards with fade-out animation\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.roleCardsContainer} ${isFadingOut ? styles.fadingOut : ''}`,\n      children: gameState.players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.roleCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: player.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.role,\n          children: player.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n  if (showGameScreen) {\n    // Render the main game screen\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.gameContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Mafia Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.phaseInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: gameState.phase === 'day' ? 'Day Phase' : 'Night Phase'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.timer,\n            children: [\"Time remaining: \", gameState.phaseTime, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.roleInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Your Role: \", gameState.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", gameState.isAlive ? 'Alive' : 'Dead']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mainContent,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.playerGrid,\n          children: gameState.players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.playerCard} ${player.isAlive ? '' : styles.dead}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.playerName,\n              children: player.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.playerStatus,\n              children: player.isAlive ? 'Alive' : 'Dead'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actionArea,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Game Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Game implementation coming soon...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n  return null; // Render nothing until the countdown, role cards, or game screen is ready\n};\n_s(GamePage, \"juA0TA0f5EnUqdlz92oO74lcrfQ=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocation","socket","styles","jsxDEV","_jsxDEV","GamePage","_s","roomId","location","username","gameSettings","state","gameState","setGameState","phase","phaseTime","players","role","isAlive","countdown","setCountdown","showRoles","setShowRoles","isFadingOut","setIsFadingOut","showGameScreen","setShowGameScreen","emit","handleCountdown","countdownDuration","timer","setInterval","prev","clearInterval","handleRoleAssigned","playersWithRoles","setTimeout","handleGameStarted","newGameState","on","off","className","countdownContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","redCountdown","roleCardsContainer","fadingOut","map","player","index","roleCard","gameContainer","header","phaseInfo","roleInfo","mainContent","playerGrid","playerCard","dead","playerName","playerStatus","actionArea","_c","$RefreshReg$"],"sources":["C:/Users/kipra/Desktop/KTU/React-SocketIO-Mafia-party-game/client/src/components/GamePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport socket from '../services/socket';\r\nimport styles from './GamePage.module.css';\r\n\r\nconst GamePage = () => {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const { username, gameSettings } = location.state || { username: 'Guest', gameSettings: {} };\r\n  const [gameState, setGameState] = useState({\r\n    phase: 'night', // 'day' or 'night'\r\n    phaseTime: 0, // time remaining in current phase\r\n    players: [], // Array of players with their roles\r\n    role: 'waiting', // Player's assigned role\r\n    isAlive: true,\r\n  });\r\n\r\n  const [countdown, setCountdown] = useState(0); // Countdown timer state\r\n  const [showRoles, setShowRoles] = useState(false); // State to show role cards\r\n  const [isFadingOut, setIsFadingOut] = useState(false); // State to trigger fade-out animation\r\n  const [showGameScreen, setShowGameScreen] = useState(false); // State to show the main game screen\r\n\r\n  useEffect(() => {\r\n    // Join game room\r\n    socket.emit('join_game', roomId, username);\r\n\r\n    // Listen for server events\r\n    const handleCountdown = (countdownDuration) => {\r\n      setCountdown(countdownDuration);\r\n\r\n      const timer = setInterval(() => {\r\n        setCountdown((prev) => {\r\n          if (prev === 1) {\r\n            clearInterval(timer);\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n    };\r\n\r\n    const handleRoleAssigned = (playersWithRoles) => {\r\n      setGameState((prev) => ({\r\n        ...prev,\r\n        players: playersWithRoles,\r\n      }));\r\n      setShowRoles(true);\r\n\r\n      // Hide the role cards after 7 seconds and show the game screen\r\n      setTimeout(() => {\r\n        setIsFadingOut(true); // Start fade-out animation\r\n        setTimeout(() => {\r\n          setShowRoles(false); // Hide role cards\r\n          setIsFadingOut(false); // Reset fade-out state\r\n          setShowGameScreen(true); // Show the main game screen\r\n        }, 1000); // Match the duration of the fade-out animation\r\n      }, 2000);\r\n    };\r\n\r\n    const handleGameStarted = (newGameState) => {\r\n      setGameState(newGameState);\r\n    };\r\n\r\n    socket.on('start_countdown', handleCountdown);\r\n    socket.on('assign_roles', handleRoleAssigned);\r\n    socket.on('game_started', handleGameStarted);\r\n\r\n    return () => {\r\n      socket.off('start_countdown', handleCountdown);\r\n      socket.off('assign_roles', handleRoleAssigned);\r\n      socket.off('game_started', handleGameStarted);\r\n    };\r\n  }, [roomId, username]);\r\n\r\n  if (countdown > 0) {\r\n    // Render the countdown timer\r\n    return (\r\n      <div className={styles.countdownContainer}>\r\n        <h1>Game Starting In...</h1>\r\n        <h2 className={countdown <= 3 ? styles.redCountdown : ''}>{countdown} seconds</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (showRoles) {\r\n    // Render role cards with fade-out animation\r\n    return (\r\n      <div className={`${styles.roleCardsContainer} ${isFadingOut ? styles.fadingOut : ''}`}>\r\n        {gameState.players.map((player, index) => (\r\n          <div key={index} className={styles.roleCard}>\r\n            <h2>{player.username}</h2>\r\n            <p className={styles.role}>{player.role}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (showGameScreen) {\r\n    // Render the main game screen\r\n    return (\r\n      <div className={styles.gameContainer}>\r\n        <div className={styles.header}>\r\n          <h1>Mafia Game</h1>\r\n          <div className={styles.phaseInfo}>\r\n            <h2>{gameState.phase === 'day' ? 'Day Phase' : 'Night Phase'}</h2>\r\n            <div className={styles.timer}>\r\n              Time remaining: {gameState.phaseTime} seconds\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.roleInfo}>\r\n          <h3>Your Role: {gameState.role}</h3>\r\n          <p>Status: {gameState.isAlive ? 'Alive' : 'Dead'}</p>\r\n        </div>\r\n\r\n        <div className={styles.mainContent}>\r\n          <div className={styles.playerGrid}>\r\n            {gameState.players.map((player, index) => (\r\n              <div\r\n                key={index}\r\n                className={`${styles.playerCard} ${player.isAlive ? '' : styles.dead}`}\r\n              >\r\n                <div className={styles.playerName}>\r\n                  {player.username}\r\n                </div>\r\n                <div className={styles.playerStatus}>\r\n                  {player.isAlive ? 'Alive' : 'Dead'}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.actionArea}>\r\n          <h3>Game Actions</h3>\r\n          <p>Game implementation coming soon...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null; // Render nothing until the countdown, role cards, or game screen is ready\r\n};\r\n\r\nexport default GamePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}