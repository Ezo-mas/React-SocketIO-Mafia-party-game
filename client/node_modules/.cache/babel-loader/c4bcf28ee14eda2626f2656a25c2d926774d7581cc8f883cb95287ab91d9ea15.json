{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fonga\\\\React-SocketIO-Mafia-party-game\\\\client\\\\src\\\\components\\\\LobbyPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useLocation, useParams, useNavigate } from 'react-router-dom';\nimport { LobbyContext } from '../context/LobbyContext';\nimport { io } from 'socket.io-client';\nimport styles from './LobbyPage.module.css';\nimport Countdown, { zeroPad } from 'react-countdown';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(process.env.REACT_APP_SERVER_URL);\nconst LobbyPage = () => {\n  _s();\n  var _location$state;\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const username = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username) || 'Guest';\n  const {\n    players,\n    addPlayer,\n    setPlayers,\n    host,\n    setRoomHost\n  } = useContext(LobbyContext);\n  const [inviteLink, setInviteLink] = useState('');\n  const [copyStatus, setCopyStatus] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n  const [readyPlayers, setReadyPlayers] = useState([]);\n  const [isHost, setIsHost] = useState(false);\n  const [roomLocked, setRoomLocked] = useState(false);\n  const [gameSettings, setGameSettings] = useState({\n    dayDuration: 120,\n    // seconds\n    nightDuration: 60,\n    // seconds\n    mafiaPercentage: 30,\n    // percentage of players who will be mafia\n    detectiveEnabled: true,\n    doctorEnabled: true,\n    civilianCount: 0 // calculated based on other roles\n  });\n  useEffect(() => {\n    if (roomId) {\n      var _location$state2;\n      setInviteLink(`${window.location.origin}/lobby/${roomId}`); // Set the full lobby link\n\n      const isUserHost = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.isHost) || false;\n      setIsHost(isUserHost);\n      if (isUserHost && !host) {\n        setRoomHost(username);\n      }\n      socket.emit('join_room', roomId, username, isUserHost);\n      const handlePlayerJoined = newPlayer => {\n        if (!players.includes(newPlayer)) {\n          addPlayer(newPlayer);\n        }\n      };\n      const handlePlayerReady = readyPlayer => {\n        setReadyPlayers(prev => {\n          if (!prev.includes(readyPlayer)) {\n            return [...prev, readyPlayer];\n          }\n          return prev;\n        });\n      };\n      const handlePlayerNotReady = notReadyPlayer => {\n        setReadyPlayers(prev => prev.filter(player => player !== notReadyPlayer));\n      };\n      const handleGameStarted = () => {\n        navigate(`/game/${roomId}`, {\n          state: {\n            username,\n            gameSettings\n          }\n        });\n      };\n      const handleRoomLocked = () => {\n        setRoomLocked(true);\n      };\n      const handleSettingsUpdated = newSettings => {\n        setGameSettings(newSettings);\n      };\n      socket.on('player_joined', handlePlayerJoined);\n      socket.on('player_ready', handlePlayerReady);\n      socket.on('player_not_ready', handlePlayerNotReady);\n      socket.on('game_started', handleGameStarted);\n      socket.on('room_locked', handleRoomLocked);\n      socket.on('settings_updated', handleSettingsUpdated);\n      return () => {\n        socket.off('player_joined', handlePlayerJoined);\n        socket.off('player_ready', handlePlayerReady);\n        socket.off('player_not_ready', handlePlayerNotReady);\n        socket.off('game_started', handleGameStarted);\n        socket.off('room_locked', handleRoomLocked);\n        socket.off('settings_updated', handleSettingsUpdated);\n      };\n    }\n  }, [roomId, username, addPlayer, players, navigate, gameSettings]);\n\n  // Calculate civilian count based on other roles\n  useEffect(() => {\n    if (players.length > 0) {\n      const mafiaCount = Math.max(1, Math.floor(players.length * gameSettings.mafiaPercentage / 100));\n      let specialRoles = 0;\n      if (gameSettings.detectiveEnabled) specialRoles++;\n      if (gameSettings.doctorEnabled) specialRoles++;\n      const civCount = Math.max(0, players.length - mafiaCount - specialRoles);\n      setGameSettings(prev => ({\n        ...prev,\n        civilianCount: civCount\n      }));\n    }\n  }, [players.length, gameSettings.mafiaPercentage, gameSettings.detectiveEnabled, gameSettings.doctorEnabled]);\n  const handleInvite = () => {\n    if (inviteLink) {\n      navigator.clipboard.writeText(inviteLink).then(() => {\n        setCopyStatus('success');\n        setTimeout(() => setCopyStatus(null), 3000);\n      }).catch(() => {\n        setCopyStatus('error');\n        setTimeout(() => setCopyStatus(null), 3000);\n      });\n    }\n  };\n  const handleStartGame = () => {\n    if (isHost && readyPlayers.length === players.length && players.length >= 4 && players.length <= 12) {\n      socket.emit('start_game', roomId, gameSettings);\n      navigate(`/game/${roomId}`, {\n        state: {\n          username,\n          gameSettings\n        }\n      });\n    } else if (players.length < 4 || players.length > 12) {\n      alert('The number of players must be between 4 and 12 to start the game.');\n    } else if (readyPlayers.length !== players.length) {\n      alert('All players must be ready to start the game.');\n    }\n  };\n  const handleLockRoom = () => {\n    if (isHost) {\n      socket.emit('lock_room', roomId);\n      setRoomLocked(true);\n    }\n  };\n  const handleKickPlayer = playerToKick => {\n    if (isHost && playerToKick !== username) {\n      socket.emit('kick_player', roomId, playerToKick);\n      setPlayers(prev => prev.filter(player => player !== playerToKick));\n      setReadyPlayers(prev => prev.filter(player => player !== playerToKick));\n    }\n  };\n  const handleReadyToggle = () => {\n    setIsReady(!isReady);\n    if (!isReady) {\n      socket.emit('player_ready', roomId, username);\n    } else {\n      socket.emit('player_not_ready', roomId, username);\n    }\n  };\n  const handleSettingChange = (setting, value) => {\n    const updatedSettings = {\n      ...gameSettings,\n      [setting]: value\n    };\n    setGameSettings(updatedSettings);\n    if (isHost) {\n      socket.emit('update_settings', roomId, updatedSettings);\n    }\n  };\n  const allPlayersReady = players.length > 0 && readyPlayers.length === players.length;\n\n  // Atsakingas už countdown formatavimą. \n  const renderer = ({\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      // Render a complete state\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Time's up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 14\n      }, this);\n    } else if (seconds <= 15 && minutes == 0) {\n      // Render a panic countdown\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.countdownEnding,\n        children: [zeroPad(minutes), \":\", zeroPad(seconds)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }, this);\n    } else {\n      // Render a countdown\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [zeroPad(minutes), \":\", zeroPad(seconds)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles['main-container'],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.countdownTitle,\n        children: [\"Time left to buckle up: \", /*#__PURE__*/_jsxDEV(Countdown, {\n          date: Date.now() + 60000,\n          renderer: renderer,\n          className: styles.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 71\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.title,\n        children: [\"Welcome, \", username, \"! \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.inviteText,\n        children: \"Invite your friends to join the lobby:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inviteLink,\n        readOnly: true,\n        className: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInvite,\n        className: styles.button,\n        children: \"Copy Invite Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 10\n      }, this), copyStatus === 'success' && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.copySuccess,\n        children: \"Link copied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 38\n      }, this), copyStatus === 'error' && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.copyError,\n        children: \"Failed to copy.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 36\n      }, this), isHost && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingsPanel,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.settingsTitle,\n          children: \"Game Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingRow,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Day Duration (seconds):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"60\",\n            max: \"300\",\n            value: gameSettings.dayDuration,\n            onChange: e => handleSettingChange('dayDuration', parseInt(e.target.value)),\n            disabled: !isHost || roomLocked,\n            className: styles.settingInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingRow,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Night Duration (seconds):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"30\",\n            max: \"180\",\n            value: gameSettings.nightDuration,\n            onChange: e => handleSettingChange('nightDuration', parseInt(e.target.value)),\n            disabled: !isHost || roomLocked,\n            className: styles.settingInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingRow,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Mafia Percentage:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"20\",\n            max: \"40\",\n            value: gameSettings.mafiaPercentage,\n            onChange: e => handleSettingChange('mafiaPercentage', parseInt(e.target.value)),\n            disabled: !isHost || roomLocked,\n            className: styles.settingSlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [gameSettings.mafiaPercentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingRow,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: gameSettings.detectiveEnabled,\n              onChange: e => handleSettingChange('detectiveEnabled', e.target.checked),\n              disabled: !isHost || roomLocked,\n              className: styles.settingCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), \"Detective Role\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingRow,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: gameSettings.doctorEnabled,\n              onChange: e => handleSettingChange('doctorEnabled', e.target.checked),\n              disabled: !isHost || roomLocked,\n              className: styles.settingCheckbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), \"Doctor Role\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.roleDistribution,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Role Distribution (Estimated):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Mafia: \", Math.floor(players.length * gameSettings.mafiaPercentage / 100), \" players\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), gameSettings.detectiveEnabled && /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Detective: 1 player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 51\n            }, this), gameSettings.doctorEnabled && /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Doctor: 1 player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Civilians: \", gameSettings.civilianCount, \" players\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), !isHost && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingsDisplay,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.settingsTitle,\n          children: \"Game Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Day Phase: \", gameSettings.dayDuration, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Night Phase: \", gameSettings.nightDuration, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Mafia: \", Math.floor(players.length * gameSettings.mafiaPercentage / 100), \" players\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), gameSettings.detectiveEnabled && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Detective Role: Enabled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 49\n          }, this), gameSettings.doctorEnabled && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Doctor Role: Enabled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Civilians: \", gameSettings.civilianCount, \" players\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.playersList,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.playersTitle,\n          children: [\"Players in Lobby: \", players.length, \"/12\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: styles.playersUl,\n          children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: styles.playersLi,\n            children: [player, \" \", player === username && \"(You)\", readyPlayers.includes(player) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.readyTag,\n              children: \"READY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 51\n            }, this), isHost && player !== username && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleKickPlayer(player),\n              className: styles.kickButton,\n              disabled: roomLocked,\n              children: \"Kick\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReadyToggle,\n        className: isReady ? styles.notReadyButton : styles.readyButton,\n        disabled: roomLocked && !isReady,\n        children: isReady ? \"Not Ready\" : \"Ready\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), isHost && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartGame,\n          disabled: !allPlayersReady || players.length < 4 || players.length > 12,\n          className: styles.startButton,\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLockRoom,\n          className: styles.lockButton,\n          disabled: roomLocked,\n          children: roomLocked ? \"Room Locked\" : \"Lock Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(LobbyPage, \"qp9H5J0DkQ8As4AZHGFOaLn7GFY=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = LobbyPage;\nexport default LobbyPage;\nvar _c;\n$RefreshReg$(_c, \"LobbyPage\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useLocation","useParams","useNavigate","LobbyContext","io","styles","Countdown","zeroPad","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","process","env","REACT_APP_SERVER_URL","LobbyPage","_s","_location$state","roomId","location","navigate","username","state","players","addPlayer","setPlayers","host","setRoomHost","inviteLink","setInviteLink","copyStatus","setCopyStatus","isReady","setIsReady","readyPlayers","setReadyPlayers","isHost","setIsHost","roomLocked","setRoomLocked","gameSettings","setGameSettings","dayDuration","nightDuration","mafiaPercentage","detectiveEnabled","doctorEnabled","civilianCount","_location$state2","window","origin","isUserHost","emit","handlePlayerJoined","newPlayer","includes","handlePlayerReady","readyPlayer","prev","handlePlayerNotReady","notReadyPlayer","filter","player","handleGameStarted","handleRoomLocked","handleSettingsUpdated","newSettings","on","off","length","mafiaCount","Math","max","floor","specialRoles","civCount","handleInvite","navigator","clipboard","writeText","then","setTimeout","catch","handleStartGame","alert","handleLockRoom","handleKickPlayer","playerToKick","handleReadyToggle","handleSettingChange","setting","value","updatedSettings","allPlayersReady","renderer","minutes","seconds","completed","children","fileName","_jsxFileName","lineNumber","columnNumber","className","countdownEnding","content","countdownTitle","date","Date","now","title","inviteText","type","readOnly","input","onClick","button","copySuccess","copyError","settingsPanel","settingsTitle","settingRow","min","onChange","e","parseInt","target","disabled","settingInput","settingSlider","checked","settingCheckbox","roleDistribution","settingsDisplay","playersList","playersTitle","playersUl","map","index","playersLi","readyTag","kickButton","notReadyButton","readyButton","startButton","lockButton","_c","$RefreshReg$"],"sources":["C:/Users/fonga/React-SocketIO-Mafia-party-game/client/src/components/LobbyPage.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { useLocation, useParams, useNavigate } from 'react-router-dom';\r\nimport { LobbyContext } from '../context/LobbyContext';\r\nimport { io } from 'socket.io-client';\r\nimport styles from './LobbyPage.module.css';\r\n\r\nimport Countdown, { zeroPad } from 'react-countdown' ;\r\n\r\nconst socket = io(process.env.REACT_APP_SERVER_URL);\r\n\r\nconst LobbyPage = () => {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const username = location.state?.username || 'Guest';\r\n  const { players, addPlayer, setPlayers, host, setRoomHost } = useContext(LobbyContext);\r\n  const [inviteLink, setInviteLink] = useState('');\r\n  const [copyStatus, setCopyStatus] = useState(null);\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [readyPlayers, setReadyPlayers] = useState([]);\r\n  const [isHost, setIsHost] = useState(false);\r\n  const [roomLocked, setRoomLocked] = useState(false);\r\n  const [gameSettings, setGameSettings] = useState({\r\n    dayDuration: 120, // seconds\r\n    nightDuration: 60, // seconds\r\n    mafiaPercentage: 30, // percentage of players who will be mafia\r\n    detectiveEnabled: true,\r\n    doctorEnabled: true,\r\n    civilianCount: 0, // calculated based on other roles\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      setInviteLink(`${window.location.origin}/lobby/${roomId}`); // Set the full lobby link\r\n      \r\n      const isUserHost = location.state?.isHost || false;\r\n      setIsHost(isUserHost);\r\n    \r\n      if (isUserHost && !host) {\r\n        setRoomHost(username);\r\n      }\r\n\r\n      socket.emit('join_room', roomId, username, isUserHost);\r\n\r\n      const handlePlayerJoined = (newPlayer) => {\r\n        if (!players.includes(newPlayer)) {\r\n          addPlayer(newPlayer);\r\n        }\r\n      };\r\n\r\n      const handlePlayerReady = (readyPlayer) => {\r\n        setReadyPlayers(prev => {\r\n          if (!prev.includes(readyPlayer)) {\r\n            return [...prev, readyPlayer];\r\n          }\r\n          return prev;\r\n        });\r\n      };\r\n\r\n      const handlePlayerNotReady = (notReadyPlayer) => {\r\n        setReadyPlayers(prev => prev.filter(player => player !== notReadyPlayer));\r\n      };\r\n\r\n      const handleGameStarted = () => {\r\n        navigate(`/game/${roomId}`, { \r\n          state: { \r\n            username,\r\n            gameSettings\r\n          } \r\n        });\r\n      };\r\n\r\n      const handleRoomLocked = () => {\r\n        setRoomLocked(true);\r\n      };\r\n\r\n      const handleSettingsUpdated = (newSettings) => {\r\n        setGameSettings(newSettings);\r\n      };\r\n\r\n      socket.on('player_joined', handlePlayerJoined);\r\n      socket.on('player_ready', handlePlayerReady);\r\n      socket.on('player_not_ready', handlePlayerNotReady);\r\n      socket.on('game_started', handleGameStarted);\r\n      socket.on('room_locked', handleRoomLocked);\r\n      socket.on('settings_updated', handleSettingsUpdated);\r\n\r\n      return () => {\r\n        socket.off('player_joined', handlePlayerJoined);\r\n        socket.off('player_ready', handlePlayerReady);\r\n        socket.off('player_not_ready', handlePlayerNotReady);\r\n        socket.off('game_started', handleGameStarted);\r\n        socket.off('room_locked', handleRoomLocked);\r\n        socket.off('settings_updated', handleSettingsUpdated);\r\n      };\r\n    }\r\n  }, [roomId, username, addPlayer, players, navigate, gameSettings]);\r\n\r\n  // Calculate civilian count based on other roles\r\n  useEffect(() => {\r\n    if (players.length > 0) {\r\n      const mafiaCount = Math.max(1, Math.floor(players.length * gameSettings.mafiaPercentage / 100));\r\n      let specialRoles = 0;\r\n      if (gameSettings.detectiveEnabled) specialRoles++;\r\n      if (gameSettings.doctorEnabled) specialRoles++;\r\n      \r\n      const civCount = Math.max(0, players.length - mafiaCount - specialRoles);\r\n      \r\n      setGameSettings(prev => ({\r\n        ...prev,\r\n        civilianCount: civCount\r\n      }));\r\n    }\r\n  }, [players.length, gameSettings.mafiaPercentage, gameSettings.detectiveEnabled, gameSettings.doctorEnabled]);\r\n\r\n  const handleInvite = () => {\r\n    if (inviteLink) {\r\n      navigator.clipboard.writeText(inviteLink)\r\n        .then(() => {\r\n          setCopyStatus('success');\r\n          setTimeout(() => setCopyStatus(null), 3000);\r\n        })\r\n        .catch(() => {\r\n          setCopyStatus('error');\r\n          setTimeout(() => setCopyStatus(null), 3000);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleStartGame = () => {\r\n    if (isHost && readyPlayers.length === players.length && players.length >= 4 && players.length <= 12) {\r\n      socket.emit('start_game', roomId, gameSettings);\r\n      navigate(`/game/${roomId}`, { \r\n        state: { \r\n          username,\r\n          gameSettings\r\n        } \r\n      });\r\n    } else if (players.length < 4 || players.length > 12) {\r\n      alert('The number of players must be between 4 and 12 to start the game.');\r\n    } else if (readyPlayers.length !== players.length) {\r\n      alert('All players must be ready to start the game.');\r\n    }\r\n  };\r\n\r\n  const handleLockRoom = () => {\r\n    if (isHost) {\r\n      socket.emit('lock_room', roomId);\r\n      setRoomLocked(true);\r\n    }\r\n  };\r\n\r\n  const handleKickPlayer = (playerToKick) => {\r\n    if (isHost && playerToKick !== username) {\r\n      socket.emit('kick_player', roomId, playerToKick);\r\n      setPlayers(prev => prev.filter(player => player !== playerToKick));\r\n      setReadyPlayers(prev => prev.filter(player => player !== playerToKick));\r\n    }\r\n  };\r\n\r\n  const handleReadyToggle = () => {\r\n    setIsReady(!isReady);\r\n    if (!isReady) {\r\n      socket.emit('player_ready', roomId, username);\r\n    } else {\r\n      socket.emit('player_not_ready', roomId, username);\r\n    }\r\n  };\r\n\r\n  const handleSettingChange = (setting, value) => {\r\n    const updatedSettings = {\r\n      ...gameSettings,\r\n      [setting]: value\r\n    };\r\n    \r\n    setGameSettings(updatedSettings);\r\n    \r\n    if (isHost) {\r\n      socket.emit('update_settings', roomId, updatedSettings);\r\n    }\r\n  };\r\n\r\n  const allPlayersReady = players.length > 0 && readyPlayers.length === players.length;\r\n\r\n  // Atsakingas už countdown formatavimą. \r\n  const renderer = ({ minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      // Render a complete state\r\n      return <span>Time's up!</span>;\r\n    } else if (seconds <= 15 && minutes == 0) {\r\n      // Render a panic countdown\r\n      return (<span className={styles.countdownEnding}>\r\n          {zeroPad(minutes)}:{zeroPad(seconds)}\r\n        </span>\r\n      );\r\n    } else {\r\n      // Render a countdown\r\n      return (\r\n        <span>\r\n          {zeroPad(minutes)}:{zeroPad(seconds)}\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles['main-container']}>\r\n      <div className={styles.content}>\r\n        <h1 className={styles.countdownTitle}>Time left to buckle up: <Countdown date={Date.now() + 60000} renderer={renderer} className={styles.title}/></h1>\r\n        <h2 className={styles.title}>Welcome, {username}! </h2>\r\n        <p className={styles.inviteText}>Invite your friends to join the lobby:</p>\r\n        \r\n        <input\r\n          type=\"text\"\r\n          value={inviteLink}\r\n          readOnly\r\n          className={styles.input}\r\n        />\r\n         <button onClick={handleInvite} className={styles.button}>\r\n          Copy Invite Link\r\n        </button>\r\n        {copyStatus === 'success' && <p className={styles.copySuccess}>Link copied!</p>}\r\n        {copyStatus === 'error' && <p className={styles.copyError}>Failed to copy.</p>}\r\n        \r\n        {isHost && (\r\n          <div className={styles.settingsPanel}>\r\n            <h3 className={styles.settingsTitle}>Game Settings</h3>\r\n            <div className={styles.settingRow}>\r\n              <label>Day Duration (seconds):</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"60\"\r\n                max=\"300\"\r\n                value={gameSettings.dayDuration}\r\n                onChange={(e) => handleSettingChange('dayDuration', parseInt(e.target.value))}\r\n                disabled={!isHost || roomLocked}\r\n                className={styles.settingInput}\r\n              />\r\n            </div>\r\n            <div className={styles.settingRow}>\r\n              <label>Night Duration (seconds):</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"30\"\r\n                max=\"180\"\r\n                value={gameSettings.nightDuration}\r\n                onChange={(e) => handleSettingChange('nightDuration', parseInt(e.target.value))}\r\n                disabled={!isHost || roomLocked}\r\n                className={styles.settingInput}\r\n              />\r\n            </div>\r\n            <div className={styles.settingRow}>\r\n              <label>Mafia Percentage:</label>\r\n              <input\r\n                type=\"range\"\r\n                min=\"20\"\r\n                max=\"40\"\r\n                value={gameSettings.mafiaPercentage}\r\n                onChange={(e) => handleSettingChange('mafiaPercentage', parseInt(e.target.value))}\r\n                disabled={!isHost || roomLocked}\r\n                className={styles.settingSlider}\r\n              />\r\n              <span>{gameSettings.mafiaPercentage}%</span>\r\n            </div>\r\n            <div className={styles.settingRow}>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={gameSettings.detectiveEnabled}\r\n                  onChange={(e) => handleSettingChange('detectiveEnabled', e.target.checked)}\r\n                  disabled={!isHost || roomLocked}\r\n                  className={styles.settingCheckbox}\r\n                />\r\n                Detective Role\r\n              </label>\r\n            </div>\r\n            <div className={styles.settingRow}>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={gameSettings.doctorEnabled}\r\n                  onChange={(e) => handleSettingChange('doctorEnabled', e.target.checked)}\r\n                  disabled={!isHost || roomLocked}\r\n                  className={styles.settingCheckbox}\r\n                />\r\n                Doctor Role\r\n              </label>\r\n            </div>\r\n            <div className={styles.roleDistribution}>\r\n              <h4>Role Distribution (Estimated):</h4>\r\n              <ul>\r\n                <li>Mafia: {Math.floor(players.length * gameSettings.mafiaPercentage / 100)} players</li>\r\n                {gameSettings.detectiveEnabled && <li>Detective: 1 player</li>}\r\n                {gameSettings.doctorEnabled && <li>Doctor: 1 player</li>}\r\n                <li>Civilians: {gameSettings.civilianCount} players</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {!isHost && (\r\n          <div className={styles.settingsDisplay}>\r\n            <h3 className={styles.settingsTitle}>Game Settings</h3>\r\n            <ul>\r\n              <li>Day Phase: {gameSettings.dayDuration} seconds</li>\r\n              <li>Night Phase: {gameSettings.nightDuration} seconds</li>\r\n              <li>Mafia: {Math.floor(players.length * gameSettings.mafiaPercentage / 100)} players</li>\r\n              {gameSettings.detectiveEnabled && <li>Detective Role: Enabled</li>}\r\n              {gameSettings.doctorEnabled && <li>Doctor Role: Enabled</li>}\r\n              <li>Civilians: {gameSettings.civilianCount} players</li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n        \r\n        <div className={styles.playersList}>\r\n          <h3 className={styles.playersTitle}>Players in Lobby: {players.length}/12</h3>\r\n          <ul className={styles.playersUl}>\r\n            {players.map((player, index) => (\r\n              <li key={index} className={styles.playersLi}>\r\n                {player} {player === username && \"(You)\"} \r\n                {readyPlayers.includes(player) && <span className={styles.readyTag}>READY</span>}\r\n                {isHost && player !== username && (\r\n                  <button\r\n                    onClick={() => handleKickPlayer(player)}\r\n                    className={styles.kickButton}\r\n                    disabled={roomLocked}\r\n                  >\r\n                    Kick\r\n                  </button>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        \r\n        <button\r\n          onClick={handleReadyToggle}\r\n          className={isReady ? styles.notReadyButton : styles.readyButton}\r\n          disabled={roomLocked && !isReady}\r\n        >\r\n          {isReady ? \"Not Ready\" : \"Ready\"}\r\n        </button>\r\n        \r\n        {isHost && (\r\n          <>\r\n            <button\r\n              onClick={handleStartGame}\r\n              disabled={!allPlayersReady || players.length < 4 || players.length > 12}\r\n              className={styles.startButton}\r\n            >\r\n              Start Game\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleLockRoom} \r\n              className={styles.lockButton}\r\n              disabled={roomLocked}\r\n            >\r\n              {roomLocked ? \"Room Locked\" : \"Lock Room\"}\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default LobbyPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}