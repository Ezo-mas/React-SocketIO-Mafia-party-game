{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kipra\\\\Desktop\\\\KTU\\\\React-SocketIO-Mafia-party-game\\\\client\\\\src\\\\components\\\\GamePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport socket from '../services/socket';\nimport styles from './GamePage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const {\n    username,\n    gameSettings\n  } = location.state || {\n    username: 'Guest',\n    gameSettings: {}\n  };\n  const [gameState, setGameState] = useState({\n    phase: 'night',\n    // 'day' or 'night'\n    phaseTime: 0,\n    // time remaining in current phase\n    players: [],\n    role: 'waiting',\n    // player's assigned role\n    isAlive: true\n  });\n  useEffect(() => {\n    // Join game room\n    socket.emit('join_game', roomId, username);\n\n    // Listen for game events\n    const handleGameStateUpdate = newState => {\n      console.log('Game state update received:', newState);\n      setGameState(newState);\n    };\n    const handleRoleAssigned = role => {\n      console.log('Role assigned:', role);\n      setGameState(prev => ({\n        ...prev,\n        role\n      }));\n    };\n    socket.on('game_state_update', handleGameStateUpdate);\n    socket.on('role_assigned', handleRoleAssigned);\n    return () => {\n      socket.off('game_state_update', handleGameStateUpdate);\n      socket.off('role_assigned', handleRoleAssigned);\n    };\n  }, [roomId, username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.gameContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mafia Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.phaseInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: gameState.phase === 'day' ? 'Day Phase' : 'Night Phase'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.timer,\n          children: [\"Time remaining: \", gameState.phaseTime, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.roleInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Your Role: \", gameState.role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", gameState.isAlive ? 'Alive' : 'Dead']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mainContent,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.playerGrid,\n        children: gameState.players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.playerCard} ${player.isAlive ? '' : styles.dead}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.playerName,\n            children: [player.username, \" (Placeholder)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.playerStatus,\n            children: player.isAlive ? 'Alive' : 'Dead'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actionArea,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Game implementation coming soon...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"+O0JAFRaArWd671VpSC/7+to6b4=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocation","socket","styles","jsxDEV","_jsxDEV","GamePage","_s","roomId","location","username","gameSettings","state","gameState","setGameState","phase","phaseTime","players","role","isAlive","emit","handleGameStateUpdate","newState","console","log","handleRoleAssigned","prev","on","off","className","gameContainer","children","header","fileName","_jsxFileName","lineNumber","columnNumber","phaseInfo","timer","roleInfo","mainContent","playerGrid","map","player","index","playerCard","dead","playerName","playerStatus","actionArea","_c","$RefreshReg$"],"sources":["C:/Users/kipra/Desktop/KTU/React-SocketIO-Mafia-party-game/client/src/components/GamePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport socket from '../services/socket';\r\nimport styles from './GamePage.module.css';\r\n\r\n\r\nconst GamePage = () => {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const { username, gameSettings } = location.state || { username: 'Guest', gameSettings: {} };\r\n  const [gameState, setGameState] = useState({\r\n    phase: 'night', // 'day' or 'night'\r\n    phaseTime: 0, // time remaining in current phase\r\n    players: [],\r\n    role: 'waiting', // player's assigned role\r\n    isAlive: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Join game room\r\n    socket.emit('join_game', roomId, username);\r\n\r\n    // Listen for game events\r\n    const handleGameStateUpdate = (newState) => {\r\n      console.log('Game state update received:', newState);\r\n      setGameState(newState);\r\n    };\r\n\r\n    const handleRoleAssigned = (role) => {\r\n      console.log('Role assigned:', role);\r\n      setGameState(prev => ({\r\n        ...prev,\r\n        role,\r\n      }));\r\n    };\r\n\r\n    socket.on('game_state_update', handleGameStateUpdate);\r\n    socket.on('role_assigned', handleRoleAssigned);\r\n\r\n    return () => {\r\n      socket.off('game_state_update', handleGameStateUpdate);\r\n      socket.off('role_assigned', handleRoleAssigned);\r\n    };\r\n  }, [roomId, username]);\r\n\r\n  return (\r\n    <div className={styles.gameContainer}>\r\n      <div className={styles.header}>\r\n        <h1>Mafia Game</h1>\r\n        <div className={styles.phaseInfo}>\r\n          <h2>{gameState.phase === 'day' ? 'Day Phase' : 'Night Phase'}</h2>\r\n          <div className={styles.timer}>\r\n            Time remaining: {gameState.phaseTime} seconds\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.roleInfo}>\r\n        <h3>Your Role: {gameState.role}</h3>\r\n        <p>Status: {gameState.isAlive ? 'Alive' : 'Dead'}</p>\r\n      </div>\r\n\r\n      <div className={styles.mainContent}>\r\n        <div className={styles.playerGrid}>\r\n          {gameState.players.map((player, index) => (\r\n            <div \r\n              key={index} \r\n              className={`${styles.playerCard} ${player.isAlive ? '' : styles.dead}`}\r\n            >\r\n              <div className={styles.playerName}>\r\n                {player.username} (Placeholder)\r\n                  {/* {player.username} {player.username === username && \"(You)\"} */}\r\n              </div>\r\n              <div className={styles.playerStatus}>\r\n                {player.isAlive ? 'Alive' : 'Dead'}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.actionArea}>\r\n        <h3>Game Actions</h3>\r\n        <p>Game implementation coming soon...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}